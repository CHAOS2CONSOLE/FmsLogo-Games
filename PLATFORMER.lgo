to bake
	cs ht pd
	drawobs
	pu setxy -500 -500
	bitcut 1000 1000
	make "baked "true
end

to drawenemy 
	setpc "red
	foreach (arraytolist :enemies) [
			pu setxy (first ?) (item 2 ?) pd
			setx xcor+:enemysize
			sety ycor+:enemysize
			setx xcor-:enemysize
			sety ycor-:enemysize
	]
	setpc "black
end

to drawobs
	foreach :level [
		pu setxy (first ?) (item 2 ?) pd
		setx (item 3 ?)
		sety (last ?)
		setx (first ?)
		sety (item 2 ?)
	]
	pu setxy -500 :floor pd
	setx 500
end

to enemylogic 
	localmake "enemiesL (arraytolist :enemies)
	repeat (count :enemiesL) [
		localmake "elem (item repcount :enemiesL)
		localmake "newx (first :elem)+:enemymovespeed*(last :elem)
		localmake "dy (item 2 :elem)
		make "dir (last :elem)
		foreach :level [
			if (or (and (:dy >= (item 2 ?)) (:dy+:enemysize <= (last ?))) (and (:dy <= (item 2 ?)) (:dy+:enemysize >= (last ?)))) [
				if (and (:newx+:enemysize >= (first ?)) (:newx+:enemysize <= (item 3 ?))) [
					make "newx (first ?)-:enemysize-1
					make "dir :dir*-1
				]
				if (and (:newx <= (item 3 ?)) (:newx >= (first ?))) [
					make "newx (item 3 ?)+1
					make "dir :dir*-1		
				]
			]	
		]
		if (or (and (:dy >= :y) (:dy+:enemysize <= :y+:size)) (and (:dy <= :y) (:dy+:enemysize >= :y+:size))) [
			if (and (:newx+:enemysize >= :x) (:newx+:enemysize <= :x+:size)) [
				;pr [GAME OVER]
				make "newx :x-:enemysize-1
				make "dir :dir*-1
			]
			if (and (:newx <= :x+:size) (:newx >= :x)) [
				;pr [GAME OVER]
				make "newx :x+:size+1
				make "dir :dir*-1		
			]
		]
		setitem repcount :enemies (list :newx :dy :dir)
	]
end

to in :x :l
	foreach :l [
		if ? = :x [op "true]
	]
	op "false
end

to left_p
	op (or (in "A :keys) (in "% :keys))
end

to main
	;ts 
	;minimize [Commander]
	;maximize [FMSLogo]
	setfocus [FMSLogo]
	window

	cs ht
	; player
	; make "movespeed 8
	make "x -450
	make "y 201
	make "grav 0
	make "weight 1
	make "jumpheight 10
	make "jumps 2
	make "level [[-500 0 -300 200] [-500 200 -430 400] [-240 150 -220 400] [-300 0 -200 100] [-200 0 -150 40] [-150 75 -100 100] [-50 75 0 100] [50 75 100 100] [150 75 200 100] [250 75 300 100] [350 0 500 100] ]
	make "floor 0
	make "size 25
	make "limit 5
	
	make "enemysize 30
	make "enemymovespeed 4
	make "enemies {[-149 0 1]}

	make "acc 0
	make "addacc 1
	make "mxacc 8
	make "slowacc 1
	
	make "baked "false
	; bake

	make "keys []
	(KEYBOARDON [onkeydown keyboardvalue] [onkeyup keyboardvalue])

	;game rendering
	
	make "FPS 60
	forever [
		tick
		eventcheck
		wait 60/:FPS ;60 is roughly one second
		eventcheck
	]
end

to max :a :b
	if (:a > :b) [op :a]
	op :b
end

to min :a :b
	if (:a < :b) [op :a]
	op :b	
end

to onkeydown :keyb
	localmake "k char :keyb
	if (keyboardvalue = 32) [make "k "SPACE]
	IF (in :k :keys) [stop]
	make "keys lput :k :keys
end

to onkeyup :keyb
	localmake "k char :keyb
	if (keyboardvalue = 32) [make "k "SPACE]
	make "keys remove :k :keys
end

to raz :a :b
	op abs (:a-:b)
end

to right_p
	op (or (in "D :keys) (in "' :keys))
end

to tick
	localmake "oldx :x
	localmake "oldy :y
	
	;handling input
	if left_p [make "acc :acc-:addacc]
	if right_p [make "acc :acc+:addacc]
	if (:acc > :mxacc) [make "acc :mxacc]
	if (:acc < -:mxacc) [make "acc -:mxacc]

	if (and not (or left_p right_p) :acc <> 0) [
		make "acc :acc-:slowacc*(:acc/(abs :acc))
	]

	make "x :x+:acc


	if (and up_p :jumps > 0) [
		make "grav :jumpheight 
		make "jumps :jumps-1
		onkeyup 32
	]


	;handling jumps
	make "y :y+:grav
	if :y <= :floor [
		make "y :floor
		make "grav :weight
		make "jumps 2
	]
	make "grav :grav-:weight
	if (:grav < -10) [make "grav -10]


	touchpos
	if (:x < -500) [make "x :x+1000]
	if (:x > 500) [make "x :x-1000]

	;drawing the player
	cs
	pu setxy :x :y pd
	repeat 4 [fd :size rt 90]

	drawenemy
	enemylogic

	ifelse (:baked) [
		pu setxy -500 -500 pd
		bitpaste
	][
		drawobs
	]

end

to touchpos
	foreach :level [
		localmake "height round (last ?)-(item 2 ?)
		localmake "thing (min :height (max 5 :grav))
		if (and (and :x+:size > (first ?) :x < (item 3 ?)) (and (last ?)-10 <= :y (last ?) >= :y)) [
			make "y (last ?)
			make "grav 0
			make "jumps 2		
		]

		if (and (and :x+:size > (first ?) :x < (item 3 ?)) (and (item 2 ?)+10 >= :y+:size (item 2 ?) <= :y+:size)) [
			make "y (item 2 ?)-:size
			make "grav -:weight
		]
	
		if (and (and :x+:size >= (first ?) :x <= (item 3 ?)) (and :y+:size > (item 2 ?) :y < (last ?))) [
			ifelse ((raz (first ?) :x+:size) < (raz (item 3 ?) :x+:size)) [
				make "x (first ?)-:size
			][
				make "x (item 3 ?)
			]
			if up_p [
				if left_p [make "acc :mxacc]
				if right_p [make "acc -:mxacc]
				if (or left_p right_p) [make "jumps 2]
				make "grav :jumpheight
			]
		]
	]
end

to up_p
	op (or (in "W :keys) (or (in "SPACE :keys) (in "& :keys)))
end

Make "acc 0
Make "addacc 1
Make "baked "false
Make "dir -1
Make "enemies {[-140 0 -1]}
Make "enemymovespeed 4
Make "enemysize 30
Make "floor 0
Make "foreach.input.rest []
Make "foreach.input1 [[-500 0 -300 200] [-500 200 -430 400] [-240 150 -220 400] [-300 0 -200 100] [-200 0 -150 40] [-150 75 -100 100] [-50 75 0 100] [50 75 100 100] [150 75 200 100] [250 75 300 100] [350 0 500 100]]
Make "foreach.input2 [pu setxy (first ?) (item 2 ?) pd setx (item 3 ?) sety (last ?) setx (first ?) sety (item 2 ?)]
Make "foreach.template [pu setxy (first ?) (item 2 ?) pd setx (item 3 ?) sety (last ?) setx (first ?) sety (item 2 ?)]
Make "fps 60
Make "grav 0
Make "jump "false
Make "jumpheight 10
Make "jumps 2
Make "keys []
Make "level [[-500 0 -300 200] [-500 200 -430 400] [-240 150 -220 400] [-300 0 -200 100] [-200 0 -150 40] [-150 75 -100 100] [-50 75 0 100] [50 75 100 100] [150 75 200 100] [250 75 300 100] [350 0 500 100]]
Make "limit 5
Make "movel "false
Make "mover "false
Make "movespeed 8
Make "mxacc 8
Make "oldx -77
Make "oldy 0
Make "size 25
Make "slowacc 1
Make "startup [main]
Make "template.lists [[[-240 150 -220 400] [-300 0 -200 100] [-200 0 -150 40] [-150 75 -100 100] [-50 75 0 100] [50 75 100 100] [150 75 200 100] [250 75 300 100] [350 0 500 100]]]
Make "template.number 3
Make "touchground "true
Make "weight 1
Make "x -77
Make "y 0
